
# Change the topology strategy and replication for core DSE keyspaces
# NOTE: Core DSE keyspaces are replicated to all DCs in the cluster
# Surface all datacenter names by finding all unique group_names for all DSE nodes
- hosts: localhost
  any_errors_fatal: true
  become: no
  connection: local
  vars:
    parent: 'dse'
  tasks:
    - name: Build a list of existing DSE datacenter names
      set_fact: 
        datacenters: "{{ ((datacenters | default([])) + hostvars[item].group_names) | difference(parent) }}"
      with_items: "{{groups[parent]}}"

    - debug: 
        msg: "{{ datacenters }}"
        
    - name: Create a dictionary of DC's and their node count from the existing datacenters list
      set_fact:
        dc_dict: "{{ dc_dict | default({}) | combine({ item:groups[item]|length }) }}"
      with_items:
        - "{{ datacenters }}"
        
    - debug: 
        msg: "{{ dc_dict }}"

    - name: Add the new datacenter to its own dictionary
      set_fact:
        add_dc_dict: "{{ add_dc_dict | default({}) | combine({ item:groups['add_datacenter']|length }) }}"
      with_items:
        - ["{{ hostvars[groups['add_datacenter'][0]]['dc'] }}"]
        
    - debug: 
        msg: "{{ add_dc_dict }}"
        
    - name: Combine the dictionaries
      set_fact:
        core_dc_dict: "{{ dc_dict | combine(add_dc_dict) }}"

    - debug: 
        msg: "{{ core_dc_dict }}"

- hosts: localhost
  any_errors_fatal: true
  become: no
  connection: local
  roles:
    - { role: keyspace_replication_core_configure}
  vars:
    cql_target: "{{ groups['dse'][0] }}"
    is_cql_target_ssl: true
    is_login_required: true
    login_u: "{{secure_super_user_account}}"
    login_p: "{{secure_super_user_password}}"
    dc_dict_var: "{{core_dc_dict}}"
    
# If there is Spark DC/s in the existing cluster, change the Spark keyspace's topology strategy and replication
# NOTE: Spark specific keyspaces are only replicated to Spark DC/s in the cluster

# Loop over the list of datacenters, if the datacenter is a Spark datacenter add it to a new list
- hosts: localhost
  any_errors_fatal: true
  become: no
  connection: local
  tasks:
    - name: Build a list of existing DSE datacenter names + the new datacenter name
      set_fact: 
        final_datacenters: "{{ datacenters + hostvars[groups['add_datacenter'][0]]['dc']) }}"

    - debug: 
        msg: "{{ final_datacenters }}"
        
    - name: Create a dictionary of Spark DC's and their node count from the datacenters collection
      set_fact:
        spark_dc_dict: "{{ spark_dc_dict | default({}) | combine({ item:groups[item]|length }) }}"
      with_items:
        - "{{ final_datacenters }}"
      when: hostvars[groups[item][0]]['spark_enabled'] == '1'
      
    - debug: 
        msg: "{{ spark_dc_dict }}"

# 
