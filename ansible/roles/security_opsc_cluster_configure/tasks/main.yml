---

# https://docs.datastax.com/en/opscenter/6.5/opsc/configure/opscClientToNode.html

#configure seperate opscenter storage cluster
#configure agent -> dse encrytption
#configure opscenter -> dse encryption

#EXPECTS: [hosts: localhost] [become: no] [connection: local] in playbook call
# This method configures the monitored and storage cluster via a REST API call to OpsCenter

- name: Start an authenticated session with OPSC via an API call
  uri:
    url: "https://{{groups['opsc_srv'][0]}}:{{opsc_web_port}}/login"
    method: POST
    body: {"username": "{{opscenter_username}}","password": "{{secure_opscenter_password}}"}
    status_code: 200
    body_format: json
    validate_certs: false
    return_content: yes
  register: session_json
  
- set_fact: cluster_name_json_template="cluster_name_json_{{dse_major_version}}.j2"

- name: Configure the monitored and storage cluster via an API call to OpsCenter
  uri:
    url: "https://{{groups['opsc_srv'][0]}}:{{opsc_web_port}}/cluster-configs"
    method: POST
    HEADER_opscenter-session: "{{session_json.json.sessionid}}"
    body: "{{ lookup('template', cluster_name_json_template) }}"
    status_code: 201
    body_format: json
    validate_certs: false
    
# raw curl test
#curl -d '{"key1":"value1", "key2":"value2"}' -H "Content-Type: application/json" -X POST http://localhost:3000/data
#- name: Run the curl command
#  command: curl -d "{{json_template}}" -H "Content-Type: application/json" -X POST "https://{{groups['opsc_srv'][0]}}:{{opsc_web_port}}/cluster-configs" --insecure




    
    
